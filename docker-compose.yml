include:
  - docker-compose.infra.yml

services:
  post-query-api:
    container_name: post-query-api
    build:
      context: .
      dockerfile: ./SocialMedia.Post/Post.Query/SocialMedia.Post.Query.Api/Dockerfile
    image: socialmedia-post-query-api
    restart: unless-stopped
    ports:
      - '4700:8080'
      - '4701:8081'
    environment:
      - ConnectionStrings:Postgres=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=admin
      - KafkaConfig:Topic=SocialMediaPostEvents
      - KafkaConfig:ConsumerConfig:GroupId=SM_Consumer
      - KafkaConfig:ConsumerConfig:BootstrapServers=kafka_broker:9094
      - KafkaConfig:ConsumerConfig:EnableAutoCommit=false
      - KafkaConfig:ConsumerConfig:AutoOffsetReset=Earliest
      - KafkaConfig:ConsumerConfig:AllowAutoCreateTopics=true
    depends_on:
      - postgres
      - kafka_broker

  post-command-api:
    container_name: post-command-api
    build:
      context: .
      dockerfile: ./SocialMedia.Post/Post.Command/SocialMedia.Post.Command.Api/Dockerfile
    image: socialmedia-post-command-api
    restart: unless-stopped
    ports:
      - '4600:8080'
      - '4601:8081'
    environment:
      - MongoDbConfig:ConnectionString=mongodb://mongo:27017
      - MongoDbConfig:Database=socialMedia
      - MongoDbConfig:Collection=eventStore
      - ProducerConfig:BootstrapServers=kafka_broker:9094
      - ProducerConfig:Debug=all
      - ProducerConfig:MessageSendMaxRetries=1
      - KafkaConfig:Topic=SocialMediaPostEvents
    depends_on:
      - mongo
      - kafka_broker